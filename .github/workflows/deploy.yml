# .github/workflows/deploy.yml
name: Deploy Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    
concurrency:
  group: "deploy"
  cancel-in-progress: true
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /root/portfolio-site
            git pull
            
            # Create backup directory if it doesn't exist
            mkdir -p /root/db-backups/portfolio-site
            
            echo "Creating database backup..."
            docker exec portfolio-site-db-1 pg_dump -U "${DB_USER}" -d "${DB_NAME}" > ${BACKUP_FILE}
            
            echo "Creating database backup..."
            BACKUP_FILE="/root/db-backups/portfolio-site/backup_$(date +%Y%m%d_%H%M%S).sql"
            docker exec portfolio-site-db-1 pg_dump -U ${DB_USER} ${DB_NAME} > ${BACKUP_FILE}
            
            cd /root/db-backups/portfolio-site
            ls -t | tail -n +2 | xargs -r rm --
            cd /root/portfolio-site 
  
            echo "PUBLIC_API_KEY=${{ secrets.PUBLIC_API_KEY }}" > .env
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            
            docker compose down
            docker volume rm portfolio-site_static-files || true
            docker compose -f docker-compose.yml up -d --build
            
            rm .env